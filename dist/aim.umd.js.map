{"version":3,"file":"aim.umd.js","sources":["../src/aim.js"],"sourcesContent":["let qsa = expr => [].slice.call(document.querySelectorAll(expr), 0);\n\n// https://stackoverflow.com/q/105034/815507\nlet uuidv4 = () =>\n  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    let r = (Math.random() * 16) | 0;\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n\nfunction aim(params) {\n  let { target } = params;\n  let options = { ...params };\n  delete options.target;\n\n  if (typeof target === 'string') {\n    let elems = qsa(target);\n    if (elems && elems.length) {\n      let ids = [];\n      elems.forEach(el => {\n        let id = uuidv4();\n        items.push({ id, target: el, data: getData(el), options });\n        ids.push(id);\n      });\n\n      if (elems.length === 1) return ids[0];\n\n      return ids;\n    }\n  }\n\n  let id = uuidv4();\n  items.push({ id, target, data: getData(target), options });\n  return id;\n}\n\nlet items = [];\n/**\n * pointerVelocity Velocity of the pointer pointer\n * pointerMagnitude Magnitude of velocity\n * pointerPosition Position of the pointer pointer\n * avgDeltaTime Average delta time for a simple calculation of new position, x = x0 +  v * t\n * pointerX the last retrived x coordinate of pointer cursor\n * pointerY the last retrived y coordinate of pointer cursor\n * anticipator an object to debug where pointer is aiming\n * anticipator.size, anticipator.radius, anticipator.center, anticipator.rect anticipator related properties\n * anRad Radius (or size) of the anticipator, increases as pointer move faster\n */\n\nlet clamp = (value, min, max) => Math.min(Math.max(value, min), max);\n\nlet getMagnitude = v => Math.sqrt(v.x * v.x + v.y * v.y);\n\nlet createVector = () => ({ x: 0, y: 0 });\n\nlet pointerVelocity = createVector(),\n  pointerMagnitude = getMagnitude(pointerVelocity),\n  pointerPosition = createVector(),\n  avgDeltaTime = 12,\n  pointerX = 0,\n  pointerY = 0,\n  DEBUG = false,\n  anticipator = {\n    size: 50,\n    center: createVector(),\n    effectiveSize: 1,\n  };\nanticipator.rect = {\n  x0: 0,\n  y0: 0,\n  x1: anticipator.size,\n  y1: anticipator.size,\n};\n\n/*\n * Default anticipate function\n *\n * @function anticipateFunc\n *\n * @param {type} position: position of anticipator\n * @param {type} velocity: velocity of anticipator\n * @param {type} pointerX pointer X coordinate\n * @param {type} pointerY pointer Y coordinate\n * @param {type} anticipator anticipator object\n * @returns {undefined}\n */\n\nfunction anticipateFunc(position, velocity, pointerX, pointerY, anticipator) {\n  let a = anticipator;\n\n  // smoothen velocity values with ratio 0.7 / 0.3\n  if (position.x && position.y) {\n    velocity.x = velocity.x * 0.7 + (pointerX - position.x) * 0.3;\n    velocity.y = velocity.y * 0.7 + (pointerY - position.y) * 0.3;\n  }\n\n  position.x = pointerX;\n  position.y = pointerY;\n\n  pointerMagnitude = getMagnitude(velocity);\n  if (pointerMagnitude < 0.1) {\n    velocity.x = 0;\n    velocity.y = 0;\n  }\n\n  // change radius according to magnitude\n  a.effectiveSize = Math.sqrt(a.size * pointerMagnitude + 1);\n\n  /*\n      assign anticipator coordinates according to new velocity values\n      and smoothen it with ratio 0.7 / 0.3\n    */\n  a.center.x =\n    a.center.x * 0.7 + (position.x + velocity.x * avgDeltaTime) * 0.3;\n\n  let windowWidth = window.innerWidth;\n  let windowHeight = window.innerHeigh;\n\n  clamp(a.center.x, 0, windowWidth - a.effectiveSize);\n\n  a.rect.x0 = a.center.x - a.effectiveSize;\n  a.rect.x1 = a.center.x + a.effectiveSize;\n\n  a.center.y =\n    a.center.y * 0.7 + (position.y + velocity.y * avgDeltaTime) * 0.3;\n\n  clamp(a.center.y, 0, windowHeight - a.effectiveSize);\n\n  a.rect.y0 = a.center.y - a.effectiveSize;\n  a.rect.y1 = a.center.y + a.effectiveSize;\n}\n\nfunction setDebug(isDebugEnabled) {\n  let debugElement = document.querySelector('#__aim-debug');\n\n  if (isDebugEnabled) {\n    if (debugElement) return;\n\n    let debugObject = createDebugObject();\n    anticipator.element = debugObject;\n  } else {\n    debugElement && debugElement.remove();\n    anticipator.element = null;\n  }\n  DEBUG = isDebugEnabled;\n}\n\naim.setDebug = setDebug;\n\nfunction setAnticipateFunction(func) {\n  if (typeof func === 'function') {\n    anticipateFunc = func;\n  }\n}\n\naim.setAnticipateFunction = setAnticipateFunction;\n\nlet getData = target => {\n  let rect = null;\n  if (target instanceof HTMLElement) {\n    rect = target.getBoundingClientRect();\n  }\n\n  let { x, y, width, height } = rect || target;\n\n  if (width === '100%') {\n    x = 0;\n    width = window.innerWidth;\n  }\n  if (height === '100%') {\n    y = 0;\n    height = window.innerHeight;\n  }\n\n  return {\n    rect: {\n      x0: x,\n      y0: y,\n      x1: x + width,\n      y1: y + height,\n    },\n    center: { x, y },\n    increment: 0,\n  };\n};\n\n/*\n * Creates a circle object which is to be used to\n * show where the anticipator is at any time\n *\n * @returns {Object}\n */\nfunction createDebugObject() {\n  let size = anticipator.size;\n  let element = document.createElement('div');\n  element.setAttribute('id', '__aim-debug');\n  element.style.width = 2 * size + 'px';\n  element.style.height = 2 * size + 'px';\n  element.style['margin-left'] = -size + 'px';\n  element.style['margin-top'] = -size + 'px';\n\n  document.body.appendChild(element);\n\n  return element;\n}\n\n/*\n * Tests rectangle - rectangle intersection and gives the ratio of intersection. Max 1, min 0.\n *\n * @param {type} rect The first rectange\n * @param {type} rect2 The second rectange\n * @returns {Number} Ratio of intersection area to area of tailblazer\n */\n\nfunction intersectRatio(rect, rect2) {\n  let x_overlap = Math.max(\n    0,\n    Math.min(rect.x1, rect2.x1) - Math.max(rect.x0, rect2.x0)\n  );\n  let y_overlap = Math.max(\n    0,\n    Math.min(rect.y1, rect2.y1) - Math.max(rect.y0, rect2.y0)\n  );\n\n  return (\n    (x_overlap * y_overlap) /\n    (anticipator.effectiveSize * anticipator.effectiveSize)\n  );\n}\n\nlet getParamsFromItem = item => ({\n  id: item.id,\n  target: item.target,\n  rect: item.data.rect,\n});\n\nlet tick = () => {\n  let a = anticipator;\n\n  if (!items.length) return;\n\n  anticipateFunc(pointerPosition, pointerVelocity, pointerX, pointerY, a);\n\n  if (DEBUG) {\n    a.element.style.transform = `translate(${a.center.x}px, ${\n      a.center.y\n    }px) scale(${a.effectiveSize / a.size})`;\n  }\n\n  /*\n   * Iterate over each elements and calculate increment for all\n   * In each cycle, it increases by a value between 0 - 0.2 (reaches max if it fully intersects) and decreases by 0.05\n   * Increment can be between 0 and 2\n   * If it's greater than 1, aimEnter function will be called\n   * if it's less than or equal to 0, aimExit function will be called\n   */\n\n  items.forEach(item => {\n    let { target, data, options } = item;\n\n    let intersectRatioValue = intersectRatio(data.rect, a.rect);\n\n    // check if they intersects and pointer is not on the element\n    if (intersectRatioValue && pointerMagnitude !== 0) {\n      data.increment += intersectRatioValue * 0.2;\n      if (1 < data.increment && data.increment < 2) {\n        if (options.className && target instanceof HTMLElement)\n          target.classList.add(options.className);\n        if (typeof options.aimEnter === 'function')\n          options.aimEnter.call(target, getParamsFromItem(item));\n\n        if (DEBUG) {\n          a.element.classList.add('__aim-debug--hit');\n        }\n      } else if (data.increment > 2) {\n        data.increment = 2;\n        if (DEBUG) {\n          a.element.classList.add('__aim-debug--hit-2');\n        }\n      }\n      return;\n    } else {\n      if (DEBUG) {\n        setTimeout(() => {\n          a.element.classList.remove('__aim-debug--hit');\n          a.element.classList.remove('__aim-debug--hit-2');\n        }, 0);\n      }\n    }\n\n    if (data.increment !== 0) {\n      data.increment -= 0.05;\n      if (data.increment < 0) {\n        data.increment = 0;\n        if (options.className && target instanceof HTMLElement)\n          target.classList.remove(options.className);\n        if (typeof options.aimExit === 'function') {\n          options.aimExit.call(target, getParamsFromItem(item));\n        }\n      }\n    }\n  });\n};\n\nlet isRunning = true;\nlet run = () => {\n  tick();\n  if (isRunning) requestAnimationFrame(run);\n};\n\nlet onPointerMove = e => {\n  pointerX = e.clientX;\n  pointerY = e.clientY;\n};\n\nlet aimHasStarted = false;\n\naim.start = () => {\n  if (aimHasStarted) return;\n\n  aimHasStarted = true;\n  document.addEventListener('pointermove', onPointerMove);\n  isRunning = true;\n  run();\n};\naim.stop = () => {\n  if (!aimHasStarted) return;\n\n  aimHasStarted = false;\n\n  isRunning = false;\n  document.removeEventListener('pointermove', onPointerMove);\n};\n\naim.remove = target => {\n  let wasRemoved = false;\n  if (target instanceof HTMLElement) {\n    items.forEach(item => {\n      if (item.target === target) {\n        item = null;\n        wasRemoved = true;\n        return;\n      }\n    });\n  } else {\n    items.forEach(item => {\n      if (item.id === target.id) {\n        item = null;\n        wasRemoved = true;\n        return;\n      }\n    });\n  }\n  if (wasRemoved) items = items.filter(Boolean);\n\n  return wasRemoved;\n};\n\naim.updatePosition = target => {\n  let wasUpdated = false;\n  if (target instanceof HTMLElement) {\n    items.forEach(item => {\n      if (item.target === target) {\n        let data = getData(target);\n        item.data.rect = data.rect;\n        item.data.center = data.center;\n        item.data.increment = data.increment;\n        wasUpdated = true;\n        return;\n      }\n    });\n  } else {\n    items.forEach(item => {\n      if (item.id === target.id) {\n        let data = getData(target);\n        item.data.rect = data.rect;\n        item.data.center = data.center;\n        item.data.increment = data.increment;\n        wasUpdated = true;\n        return;\n      }\n    });\n  }\n  return wasUpdated;\n};\n\nexport default aim;\n"],"names":["qsa","expr","slice","call","document","querySelectorAll","uuidv4","replace","c","r","Math","random","toString","aim","params","target","options","elems","length","ids","forEach","el","id","items","push","data","getData","clamp","value","min","max","getMagnitude","v","sqrt","x","y","pointerVelocity","pointerMagnitude","pointerPosition","avgDeltaTime","pointerX","pointerY","DEBUG","anticipator","size","center","effectiveSize","anticipateFunc","position","velocity","a","windowWidth","window","innerWidth","windowHeight","innerHeigh","rect","x0","x1","y0","y1","setDebug","isDebugEnabled","element","debugElement","querySelector","debugObject","createElement","setAttribute","style","width","height","body","appendChild","remove","setAnticipateFunction","func","HTMLElement","getBoundingClientRect","innerHeight","increment","getParamsFromItem","item","tick","transform","rect2","intersectRatioValue","className","classList","add","aimEnter","setTimeout","aimExit","isRunning","onPointerMove","e","clientX","clientY","aimHasStarted","start","addEventListener","run","requestAnimationFrame","stop","removeEventListener","wasRemoved","filter","Boolean","updatePosition","wasUpdated"],"mappings":"iTAAA,IAAIA,EAAM,SAAAC,SAAQ,GAAGC,MAAMC,KAAKC,SAASC,iBAAiBJ,GAAO,IAG7DK,EAAS,iBACX,uCAAuCC,QAAQ,QAAS,SAAAC,OAClDC,EAAqB,GAAhBC,KAAKC,SAAiB,SAClB,KAALH,EAAWC,EAAS,EAAJA,EAAW,GAAKG,SAAS,OAGrD,SAASC,EAAIC,OACLC,EAAWD,EAAXC,OACFC,wUAAeF,aACZE,EAAQD,OAEO,iBAAXA,EAAqB,KAC1BE,EAAQjB,EAAIe,MACZE,GAASA,EAAMC,OAAQ,KACrBC,EAAM,UACVF,EAAMG,QAAQ,SAAAC,OACRC,EAAKhB,IACTiB,EAAMC,KAAK,CAAEF,GAAAA,EAAIP,OAAQM,EAAII,KAAMC,EAAQL,GAAKL,QAAAA,IAChDG,EAAIK,KAAKF,KAGU,IAAjBL,EAAMC,OAAqBC,EAAI,GAE5BA,OAIPG,EAAKhB,WACTiB,EAAMC,KAAK,CAAEF,GAAAA,EAAIP,OAAAA,EAAQU,KAAMC,EAAQX,GAASC,QAAAA,IACzCM,EAGT,IAAIC,EAAQ,GAaRI,EAAQ,SAACC,EAAOC,EAAKC,UAAQpB,KAAKmB,IAAInB,KAAKoB,IAAIF,EAAOC,GAAMC,IAE5DC,EAAe,SAAAC,UAAKtB,KAAKuB,KAAKD,EAAEE,EAAIF,EAAEE,EAAIF,EAAEG,EAAIH,EAAEG,IAIlDC,EAFsB,CAAEF,EAAG,EAAGC,EAAG,GAGnCE,EAAmBN,EAAaK,GAChCE,EAJwB,CAAEJ,EAAG,EAAGC,EAAG,GAKnCI,EAAe,GACfC,EAAW,EACXC,EAAW,EACXC,GAAQ,EACRC,EAAc,CACZC,KAAM,GACNC,OAXsB,CAAEX,EAAG,EAAGC,EAAG,GAYjCW,cAAe,GAsBnB,SAASC,EAAeC,EAAUC,EAAUT,EAAUC,EAAUE,OAC1DO,EAAIP,EAGJK,EAASd,GAAKc,EAASb,IACzBc,EAASf,EAAiB,GAAbe,EAASf,EAAoC,IAAzBM,EAAWQ,EAASd,GACrDe,EAASd,EAAiB,GAAbc,EAASd,EAAoC,IAAzBM,EAAWO,EAASb,IAGvDa,EAASd,EAAIM,EACbQ,EAASb,EAAIM,GAEbJ,EAAmBN,EAAakB,IACT,KACrBA,EAASf,EAAI,EACbe,EAASd,EAAI,GAIfe,EAAEJ,cAAgBpC,KAAKuB,KAAKiB,EAAEN,KAAOP,EAAmB,GAMxDa,EAAEL,OAAOX,EACM,GAAbgB,EAAEL,OAAOX,EAAqD,IAA1Cc,EAASd,EAAIe,EAASf,EAAIK,OAE5CY,EAAcC,OAAOC,WACrBC,EAAeF,OAAOG,WAE1B5B,EAAMuB,EAAEL,OAAOX,EAAG,EAAGiB,EAAcD,EAAEJ,eAErCI,EAAEM,KAAKC,GAAKP,EAAEL,OAAOX,EAAIgB,EAAEJ,cAC3BI,EAAEM,KAAKE,GAAKR,EAAEL,OAAOX,EAAIgB,EAAEJ,cAE3BI,EAAEL,OAAOV,EACM,GAAbe,EAAEL,OAAOV,EAAqD,IAA1Ca,EAASb,EAAIc,EAASd,EAAII,GAEhDZ,EAAMuB,EAAEL,OAAOV,EAAG,EAAGmB,EAAeJ,EAAEJ,eAEtCI,EAAEM,KAAKG,GAAKT,EAAEL,OAAOV,EAAIe,EAAEJ,cAC3BI,EAAEM,KAAKI,GAAKV,EAAEL,OAAOV,EAAIe,EAAEJ,cA9D7BH,EAAYa,KAAO,CACjBC,GAAI,EACJE,GAAI,EACJD,GAAIf,EAAYC,KAChBgB,GAAIjB,EAAYC,MA4ElB/B,EAAIgD,SAfJ,SAAkBC,OA6DZlB,EACAmB,EA7DAC,EAAe5D,SAAS6D,cAAc,mBAEtCH,EAAgB,IACdE,EAAc,WAEdE,GAuDFtB,EAAOD,EAAYC,MACnBmB,EAAU3D,SAAS+D,cAAc,QAC7BC,aAAa,KAAM,eAC3BL,EAAQM,MAAMC,MAAQ,EAAI1B,EAAO,KACjCmB,EAAQM,MAAME,OAAS,EAAI3B,EAAO,KAClCmB,EAAQM,MAAM,gBAAkBzB,EAAO,KACvCmB,EAAQM,MAAM,eAAiBzB,EAAO,KAEtCxC,SAASoE,KAAKC,YAAYV,GAEnBA,GAhELpB,EAAYoB,QAAUG,OAEtBF,GAAgBA,EAAaU,SAC7B/B,EAAYoB,QAAU,KAExBrB,EAAQoB,GAWVjD,EAAI8D,sBANJ,SAA+BC,GACT,mBAATA,IACT7B,EAAiB6B,IAMrB,IAAIlD,EAAU,SAAAX,OACRyC,EAAO,KACPzC,aAAkB8D,cACpBrB,EAAOzC,EAAO+D,+BAGctB,GAAQzC,EAAhCmB,IAAAA,EAAGC,IAAAA,EAAGmC,IAAAA,MAAOC,IAAAA,aAEL,SAAVD,IACFpC,EAAI,EACJoC,EAAQlB,OAAOC,YAEF,SAAXkB,IACFpC,EAAI,EACJoC,EAASnB,OAAO2B,aAGX,CACLvB,KAAM,CACJC,GAAIvB,EACJyB,GAAIxB,EACJuB,GAAIxB,EAAIoC,EACRV,GAAIzB,EAAIoC,GAEV1B,OAAQ,CAAEX,EAAAA,EAAGC,EAAAA,GACb6C,UAAW,IAgDf,IAAIC,EAAoB,SAAAC,SAAS,CAC/B5D,GAAI4D,EAAK5D,GACTP,OAAQmE,EAAKnE,OACbyC,KAAM0B,EAAKzD,KAAK+B,OAGd2B,EAAO,eACLjC,EAAIP,EAEHpB,EAAML,SAEX6B,EAAeT,EAAiBF,EAAiBI,EAAUC,EAAUS,GAEjER,IACFQ,EAAEa,QAAQM,MAAMe,8BAAyBlC,EAAEL,OAAOX,iBAChDgB,EAAEL,OAAOV,uBACEe,EAAEJ,cAAgBI,EAAEN,WAWnCrB,EAAMH,QAAQ,SAAA8D,OA3CQ1B,EAAM6B,EA4CpBtE,EAA0BmE,EAA1BnE,OAAQU,EAAkByD,EAAlBzD,KAAMT,EAAYkE,EAAZlE,QAEhBsE,GA9CgB9B,EA8CqB/B,EAAK+B,KA9CpB6B,EA8C0BnC,EAAEM,KA7CxC9C,KAAKoB,IACnB,EACApB,KAAKmB,IAAI2B,EAAKE,GAAI2B,EAAM3B,IAAMhD,KAAKoB,IAAI0B,EAAKC,GAAI4B,EAAM5B,KAExC/C,KAAKoB,IACnB,EACApB,KAAKmB,IAAI2B,EAAKI,GAAIyB,EAAMzB,IAAMlD,KAAKoB,IAAI0B,EAAKG,GAAI0B,EAAM1B,MAKrDhB,EAAYG,cAAgBH,EAAYG,mBAqCrCwC,GAA4C,IAArBjD,SACzBZ,EAAKuD,WAAmC,GAAtBM,OACd,EAAI7D,EAAKuD,WAAavD,EAAKuD,UAAY,GACrChE,EAAQuE,WAAaxE,aAAkB8D,aACzC9D,EAAOyE,UAAUC,IAAIzE,EAAQuE,WACC,mBAArBvE,EAAQ0E,UACjB1E,EAAQ0E,SAASvF,KAAKY,EAAQkE,EAAkBC,IAE9CxC,GACFQ,EAAEa,QAAQyB,UAAUC,IAAI,qBAEjBhE,EAAKuD,UAAY,IAC1BvD,EAAKuD,UAAY,EACbtC,GACFQ,EAAEa,QAAQyB,UAAUC,IAAI,wBAKxB/C,GACFiD,WAAW,WACTzC,EAAEa,QAAQyB,UAAUd,OAAO,oBAC3BxB,EAAEa,QAAQyB,UAAUd,OAAO,uBAC1B,GAIgB,IAAnBjD,EAAKuD,YACPvD,EAAKuD,WAAa,IACdvD,EAAKuD,UAAY,IACnBvD,EAAKuD,UAAY,EACbhE,EAAQuE,WAAaxE,aAAkB8D,aACzC9D,EAAOyE,UAAUd,OAAO1D,EAAQuE,WACH,mBAApBvE,EAAQ4E,SACjB5E,EAAQ4E,QAAQzF,KAAKY,EAAQkE,EAAkBC,UAOrDW,GAAY,EAMZC,EAAgB,SAAAC,GAClBvD,EAAWuD,EAAEC,QACbvD,EAAWsD,EAAEE,SAGXC,GAAgB,SAEpBrF,EAAIsF,MAAQ,WACND,IAEJA,GAAgB,EAChB9F,SAASgG,iBAAiB,cAAeN,GACzCD,GAAY,EAjBJ,SAANQ,IACFlB,IACIU,GAAWS,sBAAsBD,GAgBrCA,KAEFxF,EAAI0F,KAAO,WACJL,IAELA,GAAgB,EAEhBL,GAAY,EACZzF,SAASoG,oBAAoB,cAAeV,KAG9CjF,EAAI6D,OAAS,SAAA3D,OACP0F,GAAa,SACb1F,aAAkB8D,YACpBtD,EAAMH,QAAQ,SAAA8D,MACRA,EAAKnE,SAAWA,SAClBmE,EAAO,UACPuB,GAAa,KAKjBlF,EAAMH,QAAQ,SAAA8D,MACRA,EAAK5D,KAAOP,EAAOO,UACrB4D,EAAO,UACPuB,GAAa,KAKfA,IAAYlF,EAAQA,EAAMmF,OAAOC,UAE9BF,GAGT5F,EAAI+F,eAAiB,SAAA7F,OACf8F,GAAa,SACb9F,aAAkB8D,YACpBtD,EAAMH,QAAQ,SAAA8D,MACRA,EAAKnE,SAAWA,EAAQ,KACtBU,EAAOC,EAAQX,UACnBmE,EAAKzD,KAAK+B,KAAO/B,EAAK+B,KACtB0B,EAAKzD,KAAKoB,OAASpB,EAAKoB,OACxBqC,EAAKzD,KAAKuD,UAAYvD,EAAKuD,eAC3B6B,GAAa,MAKjBtF,EAAMH,QAAQ,SAAA8D,MACRA,EAAK5D,KAAOP,EAAOO,GAAI,KACrBG,EAAOC,EAAQX,UACnBmE,EAAKzD,KAAK+B,KAAO/B,EAAK+B,KACtB0B,EAAKzD,KAAKoB,OAASpB,EAAKoB,OACxBqC,EAAKzD,KAAKuD,UAAYvD,EAAKuD,eAC3B6B,GAAa,MAKZA"}